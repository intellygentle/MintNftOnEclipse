/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
import { DelegateInput, DelegateInputArgs } from '../types';
export type ApproveInstructionAccounts = {
    /** Asset account */
    asset: PublicKey | Pda;
    /** The owner of the asset */
    owner?: Signer;
    /** The delegate account */
    delegate: PublicKey | Pda;
};
export type ApproveInstructionData = {
    discriminator: number;
    delegateInput: DelegateInput;
};
export type ApproveInstructionDataArgs = {
    delegateInput: DelegateInputArgs;
};
export declare function getApproveInstructionDataSerializer(): Serializer<ApproveInstructionDataArgs, ApproveInstructionData>;
export type ApproveInstructionArgs = ApproveInstructionDataArgs;
export declare function approve(context: Pick<Context, 'identity' | 'programs'>, input: ApproveInstructionAccounts & ApproveInstructionArgs): TransactionBuilder;
