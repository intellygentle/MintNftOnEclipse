/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type BurnInstructionAccounts = {
    /** Asset account */
    asset: PublicKey | Pda;
    /** The owner or burn delegate of the asset */
    signer: Signer;
    /** The account receiving refunded rent */
    recipient?: PublicKey | Pda;
    /** Asset account of the group */
    group?: PublicKey | Pda;
};
export type BurnInstructionData = {
    discriminator: number;
};
export type BurnInstructionDataArgs = {};
export declare function getBurnInstructionDataSerializer(): Serializer<BurnInstructionDataArgs, BurnInstructionData>;
export declare function burn(context: Pick<Context, 'programs'>, input: BurnInstructionAccounts): TransactionBuilder;
