/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
import { ExtensionType, ExtensionTypeArgs } from '../types';
export type RemoveInstructionAccounts = {
    /** Asset account */
    asset: PublicKey | Pda;
    /** The authority of the asset */
    authority?: Signer;
    /** The asset defining the group, if applicable */
    group?: PublicKey | Pda;
    /** The account receiving refunded rent */
    recipient?: PublicKey | Pda;
};
export type RemoveInstructionData = {
    discriminator: number;
    extensionType: ExtensionType;
};
export type RemoveInstructionDataArgs = {
    extensionType: ExtensionTypeArgs;
};
export declare function getRemoveInstructionDataSerializer(): Serializer<RemoveInstructionDataArgs, RemoveInstructionData>;
export type RemoveInstructionArgs = RemoveInstructionDataArgs;
export declare function remove(context: Pick<Context, 'identity' | 'programs'>, input: RemoveInstructionAccounts & RemoveInstructionArgs): TransactionBuilder;
