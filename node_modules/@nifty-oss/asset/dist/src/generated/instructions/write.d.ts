/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type WriteInstructionAccounts = {
    /** Asset account */
    asset: Signer;
    /** The account paying for the storage fees */
    payer?: Signer;
    /** The system program */
    systemProgram?: PublicKey | Pda;
};
export type WriteInstructionData = {
    discriminator: number;
    overwrite: boolean;
    bytes: Uint8Array;
};
export type WriteInstructionDataArgs = {
    overwrite: boolean;
    bytes: Uint8Array;
};
export declare function getWriteInstructionDataSerializer(): Serializer<WriteInstructionDataArgs, WriteInstructionData>;
export type WriteInstructionArgs = WriteInstructionDataArgs;
export declare function write(context: Pick<Context, 'payer' | 'programs'>, input: WriteInstructionAccounts & WriteInstructionArgs): TransactionBuilder;
